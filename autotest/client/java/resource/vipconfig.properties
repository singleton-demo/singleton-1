# It's used for categorizing translation by product on vIP side to maintain translation.
productName = JavaClient
#productName = bigdata100

# Define the translation's version used by vIP service.
version = 1.0.0

# Define the supported locale list, and their translations will be loaded to cache when initializeCache setting is true.
# locales = zh_CN,de,es,fr,ja,ko,zh_TW,zh_HANS_CN,zh_HANT_TW

# Define the supported components which are used for categorizing the messages. 
# Those messages produced by Java back-end codes including JSP will be categorized under "JAVA"; and those messages from JS codes will
# be categorized under "JS" component.
# components = JAVA,JS, JSP

######################################################################################
# [vipServer      ] - vIP server's location. It could points to local vIP server, remote vIP server such as staging, sandbox, dev vIP server.
#                     If it's empty, it will load local bundle.
# [initializeCache] - If initializeCache is true, the translation will be loaded to application cache from vIP service when application startup;
#                     else the translation will be fetched to cache when API call happens.
# [enableCache    ] - If enableCache is true, the translation will be cached on application.
# [pseudo         ] - If pseudo is true, vIP service will return pseudo if translation is not found; else will return result without pseudo tags.
# [collectSource  ] - If collectSource is true, will enable the source collection functionality which means the vIP service will send the received source vIP staging server for translation;
#                     else there's no source collection
######################################################################################

### Default settings for production environment ###
vipServer = localhost:8090
initializeCache = true
pseudo = false
collectSource = false
# clean cache period, the unit is minute, by default it's 24 hours
# cleanCachePeriod = 1440
cleanCache = false
machineTranslation = false
cacheExpiredTime = 8600000

#The level2 categories your application refer to, currently support four categories listed beblow. 
#You had better set your categories, if you don't set code will use english pattern to do level2 format except currency.
#Note: If you refer to currency, you must set i18nScope=numbers,currencies, if you refer to plural, you must set i18nScope=numbers,plurals.
#If you don't refer to level2, you can ignore it.
i18nScope=numbers,dates,currencies,plurals,measurements
en.artifactory.url = https://build-artifactory.eng.vmware.com/artifactory/vip-gradle-local/i18n-patterns/i18n-patterns-en/
en.pattern.version = 0.10.11
